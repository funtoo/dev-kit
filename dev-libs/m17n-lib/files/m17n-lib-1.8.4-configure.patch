diff --git a/configure.ac b/configure.ac
index f17ea20..fa42fde 100644
--- a/configure.ac
+++ b/configure.ac
@@ -96,8 +96,8 @@ AC_SUBST(M17NDIR)
 
 dnl Checks which levels of APIs should be compiled.
 
-AC_ARG_ENABLE(gui,
-	      AS_HELP_STRING([--enable-gui],[enable GUI level APIs (default is YES)]))
+AC_ARG_WITH(gui,
+	      AS_HELP_STRING([--with-gui],[enable GUI level APIs (default is YES)]))
 
 AM_CONDITIONAL(WITH_GUI, test x$with_gui != xno)
 
@@ -125,7 +125,8 @@ if test "x$no_x" != "xyes"; then
   X11_LD_FLAGS="-lXt -lX11"
   M17N_EXT_LIBS="$M17N_EXT_LIBS X11"
 
-  if test "x$HAVE_XAW" = "xyes"; then
+  AC_ARG_WITH(athena, AS_HELP_STRING([--with-athena],[with MIT Athena widget support]))
+  if test "x$with_athena" != "xno" -a "x$HAVE_XAW" = "xyes"; then
     AC_DEFINE(HAVE_X11_XAW_COMMAND_H, 1,
 	      [Define to 1 if you have the Xaw header files.])
     XAW_LD_FLAGS="-lXaw -lXmu"
@@ -149,7 +150,8 @@ else
 fi
 AC_CHECK_LIB(fribidi, fribidi_set_mirroring, HAVE_FRIBIDI=yes, HAVE_FRIBIDI=no)
 AC_CHECK_HEADER(fribidi/fribidi.h,, HAVE_FRIBIDI=no)
-if test "x$HAVE_FRIBIDI" = "xyes"; then
+AC_ARG_WITH(fribidi, AS_HELP_STRING([--with-fribidi],[with fribidi support]))
+if test "x$with_fribidi" = "xno" -a "x$HAVE_FRIBIDI" = "xyes"; then
   AC_DEFINE(HAVE_FRIBIDI, 1, 
 	    [Define to 1 if you have Fribidi library and header file.])
   M17N_EXT_LIBS="$M17N_EXT_LIBS fribidi"
@@ -244,7 +246,8 @@ AC_CHECK_HEADER(X11/Xft/Xft.h,, HAVE_XFT2=no,
 #else
 Version too old.  Compiling this line should fail.
 #endif])
-if test "x$HAVE_XFT2" = "xyes"; then
+AC_ARG_WITH(xft, AS_HELP_STRING([--with-xft],[enable XFT2 support]))
+if test "x$with_xft" != "xno" -a "x$HAVE_XFT2" = "xyes"; then
   AC_DEFINE(HAVE_XFT2, 1,
 	    [Define to 1 if you have Xft2 library and header file.])
   M17N_EXT_LIBS="$M17N_EXT_LIBS xft2"
@@ -319,7 +322,8 @@ else
 fi
 AC_CHECK_LIB(xml2, xmlParseMemory, HAVE_XML2=yes, HAVE_XML2=no)
 AC_CHECK_HEADER(libxml/tree.h,, HAVE_XML2=no, /**/)
-if test "x$HAVE_XML2" = "xyes"; then
+AC_ARG_WITH(libxml2, AS_HELP_STRING([--with-libxml2], [with libxml2 support]))
+if test "x$with_libxml2" != "xno" -a "x$HAVE_XML2" = "xyes"; then
   AC_DEFINE(HAVE_XML2, 1,
 	    [Define to 1 if you have libxml2 library and header file])
   M17N_EXT_LIBS="$M17N_EXT_LIBS xml2"
@@ -333,7 +337,8 @@ AC_SUBST(XML2_LD_FLAGS)
 dnl Check for Anthy usability.
 
 PKG_CHECK_MODULES(ANTHY, anthy, HAVE_ANTHY=yes, HAVE_ANTHY=no)
-if test "x$HAVE_ANTHY" = "xyes"; then
+AC_ARG_WITH(anthy, AS_HELP_STRING([--with-anthy],[with anthy support]))
+if test "x$with_anthy" != "xno" -a "x$HAVE_ANTHY" = "xyes"; then
   AC_DEFINE(HAVE_ANTHY, 1,
 	   [Define to 1 if you have Anthy library and header file])
   M17N_EXT_LIBS="$M17N_EXT_LIBS anthy"
@@ -344,7 +349,8 @@ AC_SUBST(ANTHY_LD_FLAGS)
 
 dnl Check for Ispell usability.
 AC_CHECK_PROG(HAVE_ISPELL, ispell, yes)
-if test "x$HAVE_ISPELL" = "xyes"; then
+AC_ARG_WITH(ispell, AS_HELP_STRING([--with-ispell],[with ispell support]))
+if test "x$with_ispell" != "xno" -a "x$HAVE_ISPELL" = "xyes"; then
   AC_DEFINE(HAVE_ISPELL, 1, [Define if ispell is available.])
   M17N_EXT_LIBS="$M17N_EXT_LIBS ispell"
   CONFIG_FLAGS="$CONFIG_FLAGS -DHAVE_ISPELL"
